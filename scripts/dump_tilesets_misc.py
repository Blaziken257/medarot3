#!/bin/python
import os
import sys
from collections import OrderedDict

sys.path.append(os.path.join(os.path.dirname(__file__), 'common'))
from common import utils, gfx

# Constants
BYTES_PER_TILE = ((2 * 8 * 8) // 8)

# Arguments
script_name = sys.argv[0]
gfx_raw_path = sys.argv[1]
gfx_out_path = sys.argv[2]
scripts_res_path = sys.argv[3]
gfx_src_path = sys.argv[4]
version_src_path = sys.argv[5]

rom_filename = "baserom_kabuto.gbc"

# Manually define tilesets to dump
tileset_information = (
    # Name, Address, Tile Count, (requested width in tiles, requested height in tiles), Ignored
    ["CreditsFont", (0x18, 0x4a2f), 650, (0xA, None), False],
)

gfx_src_filename = os.path.join(gfx_src_path, "tilesets_misc_data.asm")

with open(rom_filename, "rb") as rom, open(gfx_src_filename, "w") as source_fp:
    source_fp.write(f"; File initially autogenerated by {script_name}\n")
    source_fp.write('\n')

    for tileset in tileset_information:
        name, address, count, requested_dimensions, ignored = tileset
        real_address = utils.rom2realaddr(address) if isinstance(address, tuple) else address
        rom_address = tileset[1] if isinstance(address, tuple) else utils.real2romaddr(address)

        png_filename = os.path.join(gfx_raw_path, f"{name}.png")
        out_filename = os.path.join(gfx_out_path, f"{name}.2bpp")
        size = 0

        rom.seek(real_address)
        size = BYTES_PER_TILE * count
        data = rom.read(size)

        requested_width = requested_dimensions[0] * 8 if requested_dimensions[0] else None
        requested_height = requested_dimensions[1] * 8 if requested_dimensions[1] else None

        gfx.dump_2bpp_to_png(png_filename, data, requested_width, requested_height)

        source_fp.write(f'SECTION "Tileset {name}", ROMX[${rom_address[1]:04X}], BANK[${rom_address[0]:02X}]\n')
        source_fp.write(f'Tileset{name}::\n')
        if ignored:
            source_fp.write(';')
        source_fp.write(f'  INCBIN "{out_filename}"\n')
        source_fp.write(f'SECTION "Tileset {name} End", ROMX[${utils.real2romaddr(rom.tell() - 1)[1]:04X}], BANK[${rom_address[0]:02X}]\n')
        
        source_fp.write('\n')